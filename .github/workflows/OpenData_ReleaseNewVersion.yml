name: Release new version on Github and Zenodo

on:
  push:
    tags:
      - '[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]_pre'
  
env:
  zenodo_deposition_id: 7045246
  zenodo_server: 'https://zenodo.org'
  whitelist_replace_doi: .github/workflows/.zenodo_whitelist_replace_doi
  whitelist_uploads: .github/workflows/.zenodo_whitelist_uploads
  
jobs:
  new_zenodo_draft:
    name: Create new draft of Zenodo deposition and retrieve DOI
    runs-on: ubuntu-latest
    outputs:
      latest_doi: ${{ steps.retrieve_dois.outputs.latest_doi }}
      reserved_doi: ${{ steps.retrieve_dois.outputs.reserved_doi }}
    
    steps:
      - name: Create new draft of Zenodo deposition and retrieve DOI
        uses: HannesWuensche/zenodo-new-version@e0dd7918d62495e8d294984293c90b0dd544882f
        id: retrieve_dois
        with:
         zenodo_deposition_id: ${{ env.zenodo_deposition_id }}
         zenodo_server: ${{ env.zenodo_server }}
         zenodo_token: ${{ secrets.ZENODO_TOKEN }}
  
  create_tag:
    name: Create tag from ref
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    
    steps:
      - name: Remove _pre from ref
        id: tag
        run: |
          REF=${{github.ref_name}}
          TAG="${REF//_pre/}"
          echo "::set-output name=tag::$TAG"
  
  update_deposition:
    name: Update DOIs in all and publish new Zenodo Deposition
    runs-on: ubuntu-latest
    needs: [new_zenodo_draft, create_tag]
    
    steps:
      - name: Checkout Repository    
        uses: actions/checkout@v3
        with:
          ref: master
        
      - name: Replace DOIs in all given files by whitelist_replace_doi
        shell: bash
        run: |
          xargs -a ${{ env.whitelist_replace_doi }} -I {}\
            awk -i inplace -v t="${{ needs.new_zenodo_draft.outputs.latest_doi }}" -v r="${{ needs.new_zenodo_draft.outputs.reserved_doi }}" "{gsub(t,r);}1" {}

      - name: Create temprorary workingdirectory for PDF bulid action
        run: mkdir md2pdf & cp Readme*.md md2pdf/ 

      - name: Bulid Documentation PDFs from readme files
        uses: baileyjm02/markdown-to-pdf@v1.2.0
        with:
          input_dir: md2pdf/
          output_dir: md2pdf/
          image_import: /.github/pictures   #Uncomment if u use imgges in your Readme.md
          images_dir: /.github/pictures     #Uncomment if u use imgges in your Readme.md
          build_html: false
      
      - name: Rename generated Readme.pdfs 
        run: | 
             mv md2pdf/Readme.pdf "[Dokumentation]_$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' ).pdf"
             if [ -f md2pdf/Readme_en.pdf ]; then
                mv md2pdf/Readme_en.pdf "[Documentation]_$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' ).pdf"
             fi  
        
      - name: Publish Data and Metadata on Zenodo
        uses: kykrueger/zenodo-publish@v1.0.5
        with:
          zenodo_metadata: Metadaten/zenodo.json
          whitelist_uploads: .github/workflows/.zenodo_whitelist_uploads
          zenodo_deposition_id: ${{ env.zenodo_deposition_id }}
          zenodo_server: ${{ env.zenodo_server }}
          zenodo_token: ${{ secrets.ZENODO_TOKEN }}

      - name: Clean Working Directory
        run: rm -rf md2pdf .tmp_zenodo_deposition.json
                
      - name: Add and Commit Changes 
        uses: EndBug/add-and-commit@v9.0.1
        with:
          message: 'Update Metadata ${{ needs.create_tag.outputs.tag }}'
          tag: ${{ needs.create_tag.outputs.tag }}

  create_release:
    name: Create release 
    runs-on: ubuntu-latest
    needs: [update_deposition, create_tag]
    
    steps:
      - name: Checkout Repository    
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ needs.create_tag.outputs.tag }}
          release_name: Datenstand ${{ needs.create_tag.outputs.tag }}
          body: Datenstand ${{ needs.create_tag.outputs.tag }} inklusive aktualisierter Metadaten
          draft: false
          prerelease: false

